<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 配置一个helloWord Bean
		id: 配置bean的名字，id唯一。
		class: package-name.class-name。
	 -->
	<bean id="helloWord" class="spring.beans.HelloWord">
		<!-- 对配置bean的属性name通过setName方法注入Spring值。 -->
		<property name="name" value="Spring"></property>
	</bean>

	<!-- 构造注入，注入方式为依据构造函数进行注入 
		index: 表明是第几个，下标从0开始。顺序，参数位置
		type: 表明配置的类型。类型
		以此区分重载的构造器。
	-->
	<bean id="car" class="spring.beans.collection.Car">
		<constructor-arg value="Audi"></constructor-arg>
		<!-- 
		<constructor-arg value="ShangHai"></constructor-arg>
		 -->
		<!-- 或者用value属性进行配置，此方法也可以；而且支持特殊符号。-->
		<constructor-arg type="java.lang.String">
			<!-- 用这种方法还可以添加特殊标签，如<和>;用![CDATA[]]包裹起来。 -->
			<value><![CDATA[ShangHai]]></value>
		</constructor-arg>
		<constructor-arg value="300000"></constructor-arg>
	</bean>
	
	<bean id="car2" class="spring.beans.collection.Car">
		<constructor-arg value="Audi"></constructor-arg>
		<constructor-arg value="GuangZhou"></constructor-arg>
		<constructor-arg value="200000"></constructor-arg>
	</bean>
	<bean id="person" class="spring.beans.collection.Person">
		<property name="name" value="zhangsan"></property>
		<property name="cars">
			<!-- 使用list节点配置List集合属性。 -->
			<list>
				<ref bean="car" />
				<ref bean="car2" />
				<bean id="car3" class="spring.beans.collection.Car">
					<constructor-arg value="Audi"></constructor-arg>
					<constructor-arg value="ShengZhen"></constructor-arg>
					<constructor-arg value="200000"></constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
	
</beans>
